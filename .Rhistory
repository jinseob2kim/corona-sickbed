### import from dropbox ----
library(rdrop2)
token <- readRDS("token.rds")
### Report
library(rmarkdown)
file_info <- reactive({
file <- drop_dir("corona19", dtoken = token) %>%
select(name, client_modified) %>%
arrange(desc(client_modified))
file_name <- file %>%
pull(name) %>%
.[1]
file_date <- file %>%
pull(client_modified) %>%
.[1] %>%
lubridate::ymd_hms() + 60*60*9
if (!dir.exists("data")){
dir.create("data")
}
if (length(list.files("data/")) > 0){
file.remove(paste0("data/", list.files("data/")))
}
paste0("corona19/", file_name) %>% drop_download(local_path = "data", overwrite = TRUE, dtoken = token)
return(list(file_name, file_date))
})
file <- drop_dir("corona19", dtoken = token) %>%
select(name, client_modified) %>%
arrange(desc(client_modified))
# library ----
library(tidyverse)
library(shiny)
library(shinydashboard)
library(shinycustomloader)
library(shiny.info)
library(shinyjs)
library(leaflet)
library(leaflet.minicharts)
library(highcharter)
library(DT)
library(knitr)
library(lubridate)
library(purrr)
## Make login DB
library(shinymanager)
### import from dropbox ----
library(rdrop2)
token <- readRDS("token.rds")
### Report
library(rmarkdown)
file <- drop_dir("corona19", dtoken = token) %>%
select(name, client_modified) %>%
arrange(desc(client_modified))
file_name <- file %>%
pull(name) %>%
.[1]
file_date <- file %>%
pull(client_modified) %>%
.[1] %>%
lubridate::ymd_hms() + 60*60*9
if (!dir.exists("data")){
dir.create("data")
}
if (length(list.files("data/")) > 0){
file.remove(paste0("data/", list.files("data/")))
}
paste0("corona19/", file_name) %>% drop_download(local_path = "data", overwrite = TRUE, dtoken = token)
runApp()
library(dplyr)
library(ggplot2)
library(tidyr)
library(gridExtra)
## Apply font from local ttf file
library(showtext)
showtext.opts(dpi = 330)                                ## same to rmd chunk
font_add("GyeonggiBatangR", "/home/js/ShinyApps/corona-sickbed/www/Batang_Regular.ttf")
font_add("GyeonggiBatangB", "Batang_Bold.ttf")
library(dplyr)
library(dplyr)
library(ggplot2)
library(ggplot2)
library(tidyr)
library(gridExtra)
## Apply font from local ttf file
library(showtext)
showtext.opts(dpi = 330)                                ## same to rmd chunk
font_add("GyeonggiBatangB", "Batang_Bold.ttf")
font_add("GyeonggiBatangR", "Batang_Regular.ttf")
font_add("GyeonggiBatangB", "Batang_Regular.ttf")
font_add("GyeonggiBatangB", "Batang_Bold.ttf")
font_paths()
font_add("GyeonggiBatangR", "/home/js/ShinyApps/corona-sickbed/www/Batang_Regular.ttf")
font_add("GyeonggiBatangB", "/home/js/ShinyApps/corona-sickbed/www/Batang_Bold.ttf")
shiny::runApp()
runApp()
runApp()
runApp()
git status
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(highcharter)
library(tidyverse)
library(readxl)
df <- read_excel("data/현재 corona 병상 (2020.04.24. 08시).xlsx",
sheet = "생활치료센터")
View(df)
df %>%
mutate(가용객실수 = 총객실수 - 사용객실수) %>%
select(센터명, 사용객실수, 가용객실수) %>%
gather("가용", "병상수", 사용객실수:가용객실수) %>%
hchart(
type = "column",
hcaes("센터명", "병상수", group = "가용"),
stacking = "normal",
dataLabels = list(
enabled = TRUE,
color = "#323232",
format = '<span style="font-size: 13px">{point.y}</span>'
)
) %>%
hc_colors(c("#e5dfdf", "#02a8a8")) %>%
hc_yAxis(visible = FALSE) %>%
hc_xAxis(
title = "",
labels = list(style = list(fontSize = "13px", color = "#323232", fontWeight = "bold"))
) %>%
hc_legend(
align = "inner", verticalAlign = "top",
layout = "vertical", x = 0, y = 30
) %>%
hc_tooltip(pointFormat = "{point.y}병상") %>%
hc_title(text = "<b>생활치료센터 운용 현황</b>")
df %>%
mutate(가용객실수 = 총객실수 - 사용객실수) %>%
select(센터명, 사용객실수, 가용객실수) %>%
gather("가용", "병상수", 사용객실수:가용객실수) %>%
hchart(
type = "column",
hcaes("센터명", "병상수", group = "가용"),
stacking = "normal",
dataLabels = list(
enabled = TRUE,
color = "#323232",
format = '<span style="font-size: 13px">{point.y}</span>'
)
) %>%
hc_colors(c("#02a8a8", "#e5dfdf")) %>%
hc_yAxis(visible = FALSE) %>%
hc_xAxis(
title = "",
labels = list(style = list(fontSize = "13px", color = "#323232", fontWeight = "bold"))
) %>%
hc_legend(
align = "inner", verticalAlign = "top",
layout = "vertical", x = 0, y = 30
) %>%
hc_tooltip(pointFormat = "{point.y}병상") %>%
hc_title(text = "<b>생활치료센터 운용 현황</b>")
df %>%
mutate(가용객실수 = 총객실수 - 사용객실수) %>%
select(센터명, 가용객실수, 사용객실수) %>%
gather("가용", "병상수", 가용객실수:사용객실수) %>%
hchart(
type = "column",
hcaes("센터명", "병상수", group = "가용"),
stacking = "normal",
dataLabels = list(
enabled = TRUE,
color = "#323232",
format = '<span style="font-size: 13px">{point.y}</span>'
)
) %>%
hc_colors(c("#e5dfdf", "#02a8a8")) %>%
hc_yAxis(visible = FALSE) %>%
hc_xAxis(
title = "",
labels = list(style = list(fontSize = "13px", color = "#323232", fontWeight = "bold"))
) %>%
hc_legend(
align = "inner", verticalAlign = "top",
layout = "vertical", x = 0, y = 30
) %>%
hc_tooltip(pointFormat = "{point.y}병상") %>%
hc_title(text = "<b>생활치료센터 운용 현황</b>")
df %>%
mutate(가용객실수 = 총객실수 - 사용객실수) %>%
select(센터명, 가용객실수, 사용객실수) %>%
gather("가용", "병상수", 가용객실수:사용객실수) %>%
mutate(가용 = factor(가용, levels = c(가용객실수, 사용객실수))) %>%
hchart(
type = "column",
hcaes("센터명", "병상수", group = "가용"),
stacking = "normal",
dataLabels = list(
enabled = TRUE,
color = "#323232",
format = '<span style="font-size: 13px">{point.y}</span>'
)
) %>%
hc_colors(c("#e5dfdf", "#02a8a8")) %>%
hc_yAxis(visible = FALSE) %>%
hc_xAxis(
title = "",
labels = list(style = list(fontSize = "13px", color = "#323232", fontWeight = "bold"))
) %>%
hc_legend(
align = "inner", verticalAlign = "top",
layout = "vertical", x = 0, y = 30
) %>%
hc_tooltip(pointFormat = "{point.y}병상") %>%
hc_title(text = "<b>생활치료센터 운용 현황</b>")
df %>%
mutate(가용객실수 = 총객실수 - 사용객실수) %>%
select(센터명, 가용객실수, 사용객실수) %>%
gather("가용", "병상수", 가용객실수:사용객실수) %>%
mutate(가용 = factor(가용, levels = c("가용객실수", "사용객실수"))) %>%
hchart(
type = "column",
hcaes("센터명", "병상수", group = "가용"),
stacking = "normal",
dataLabels = list(
enabled = TRUE,
color = "#323232",
format = '<span style="font-size: 13px">{point.y}</span>'
)
) %>%
hc_colors(c("#e5dfdf", "#02a8a8")) %>%
hc_yAxis(visible = FALSE) %>%
hc_xAxis(
title = "",
labels = list(style = list(fontSize = "13px", color = "#323232", fontWeight = "bold"))
) %>%
hc_legend(
align = "inner", verticalAlign = "top",
layout = "vertical", x = 0, y = 30
) %>%
hc_tooltip(pointFormat = "{point.y}병상") %>%
hc_title(text = "<b>생활치료센터 운용 현황</b>")
runApp()
df %>%
mutate(가용객실수 = 총객실수 - 사용객실수) %>%
select(센터명, 가용객실수, 사용객실수) %>%
gather("가용", "병상수", 가용객실수:사용객실수) %>%
mutate(가용 = factor(가용, levels = c("사용객실수", "가용객실수"))) %>%
hchart(
type = "column",
hcaes("센터명", "병상수", group = "가용"),
stacking = "normal",
dataLabels = list(
enabled = TRUE,
color = "#323232",
format = '<span style="font-size: 13px">{point.y}</span>'
)
) %>%
hc_colors(c("#e5dfdf", "#02a8a8")) %>%
hc_yAxis(visible = FALSE) %>%
hc_xAxis(
title = "",
labels = list(style = list(fontSize = "13px", color = "#323232", fontWeight = "bold"))
) %>%
hc_legend(
align = "inner", verticalAlign = "top",
layout = "vertical", x = 0, y = 30
) %>%
hc_tooltip(pointFormat = "{point.y}병상") %>%
hc_title(text = "<b>생활치료센터 운용 현황</b>")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
git status
runApp()
runApp()
runApp()
